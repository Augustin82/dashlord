{
	"@version": "2.11.1",
	"@generated": "Sun, 18 Sep 2022 06:29:57",
	"site":[ 
		{
			"@name": "https://ma-cantine.beta.gouv.fr",
			"@host": "ma-cantine.beta.gouv.fr",
			"@port": "443",
			"@ssl": "true",
			"alerts": [ 
				{
					"pluginid": "10055",
					"alertRef": "10055-4",
					"alert": "CSP: Wildcard Directive",
					"name": "CSP: Wildcard Directive",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"uri": "https://ma-cantine.beta.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "frame-src 'self' ma-cantine.crisp.help; style-src 'self' 'unsafe-inline' client.crisp.chat netdna.bootstrapcdn.com; connect-src 'self' stats.data.gouv.fr ws: api-adresse.data.gouv.fr client.crisp.chat wss://client.relay.crisp.chat entreprise.data.gouv.fr plateforme.adresse.data.gouv.fr; default-src 'self'; script-src 'self' stats.data.gouv.fr 'unsafe-inline' client.crisp.chat; object-src 'self' cellar-c2.services.clever-cloud.com; font-src 'self' client.crisp.chat; img-src 'self' cellar-c2.services.clever-cloud.com voxusagers.numerique.gouv.fr 'unsafe-inline' stats.data.gouv.fr www.w3.org data: image.crisp.chat jedonnemonavis.numerique.gouv.fr; media-src 'self' cellar-c2.services.clever-cloud.com"
						}
					],
					"count": "1",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: </p><p>connect-src, frame-ancestors, form-action</p><p></p><p>The directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.</p>",
					"reference": "<p>http://www.w3.org/TR/CSP2/</p><p>http://www.w3.org/TR/CSP/</p><p>http://caniuse.com/#search=content+security+policy</p><p>http://content-security-policy.com/</p><p>https://github.com/shapesecurity/salvation</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-5",
					"alert": "CSP: script-src unsafe-inline",
					"name": "CSP: script-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"uri": "https://ma-cantine.beta.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "frame-src 'self' ma-cantine.crisp.help; style-src 'self' 'unsafe-inline' client.crisp.chat netdna.bootstrapcdn.com; connect-src 'self' stats.data.gouv.fr ws: api-adresse.data.gouv.fr client.crisp.chat wss://client.relay.crisp.chat entreprise.data.gouv.fr plateforme.adresse.data.gouv.fr; default-src 'self'; script-src 'self' stats.data.gouv.fr 'unsafe-inline' client.crisp.chat; object-src 'self' cellar-c2.services.clever-cloud.com; font-src 'self' client.crisp.chat; img-src 'self' cellar-c2.services.clever-cloud.com voxusagers.numerique.gouv.fr 'unsafe-inline' stats.data.gouv.fr www.w3.org data: image.crisp.chat jedonnemonavis.numerique.gouv.fr; media-src 'self' cellar-c2.services.clever-cloud.com"
						}
					],
					"count": "1",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>script-src includes unsafe-inline.</p>",
					"reference": "<p>http://www.w3.org/TR/CSP2/</p><p>http://www.w3.org/TR/CSP/</p><p>http://caniuse.com/#search=content+security+policy</p><p>http://content-security-policy.com/</p><p>https://github.com/shapesecurity/salvation</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-6",
					"alert": "CSP: style-src unsafe-inline",
					"name": "CSP: style-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"uri": "https://ma-cantine.beta.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "frame-src 'self' ma-cantine.crisp.help; style-src 'self' 'unsafe-inline' client.crisp.chat netdna.bootstrapcdn.com; connect-src 'self' stats.data.gouv.fr ws: api-adresse.data.gouv.fr client.crisp.chat wss://client.relay.crisp.chat entreprise.data.gouv.fr plateforme.adresse.data.gouv.fr; default-src 'self'; script-src 'self' stats.data.gouv.fr 'unsafe-inline' client.crisp.chat; object-src 'self' cellar-c2.services.clever-cloud.com; font-src 'self' client.crisp.chat; img-src 'self' cellar-c2.services.clever-cloud.com voxusagers.numerique.gouv.fr 'unsafe-inline' stats.data.gouv.fr www.w3.org data: image.crisp.chat jedonnemonavis.numerique.gouv.fr; media-src 'self' cellar-c2.services.clever-cloud.com"
						}
					],
					"count": "1",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>style-src includes unsafe-inline.</p>",
					"reference": "<p>http://www.w3.org/TR/CSP2/</p><p>http://www.w3.org/TR/CSP/</p><p>http://caniuse.com/#search=content+security+policy</p><p>http://content-security-policy.com/</p><p>https://github.com/shapesecurity/salvation</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10010",
					"alertRef": "10010",
					"alert": "Cookie No HttpOnly Flag",
					"name": "Cookie No HttpOnly Flag",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.</p>",
					"instances":[ 
						{
							"uri": "https://ma-cantine.beta.gouv.fr",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken"
						}
					],
					"count": "1",
					"solution": "<p>Ensure that the HttpOnly flag is set for all cookies.</p>",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/www-community/HttpOnly</p>",
					"cweid": "1004",
					"wascid": "13",
					"sourceid": "1"
				},
				{
					"pluginid": "10011",
					"alertRef": "10011",
					"alert": "Cookie Without Secure Flag",
					"name": "Cookie Without Secure Flag",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.</p>",
					"instances":[ 
						{
							"uri": "https://ma-cantine.beta.gouv.fr",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken"
						}
					],
					"count": "1",
					"solution": "<p>Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.</p>",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html</p>",
					"cweid": "614",
					"wascid": "13",
					"sourceid": "1"
				},
				{
					"pluginid": "10015",
					"alertRef": "10015",
					"alert": "Re-examine Cache-control Directives",
					"name": "Re-examine Cache-control Directives",
					"riskcode": "0",
					"confidence": "1",
					"riskdesc": "Informational (Low)",
					"desc": "<p>The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.</p>",
					"instances":[ 
						{
							"uri": "https://ma-cantine.beta.gouv.fr",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": ""
						}
					],
					"count": "1",
					"solution": "<p>For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".</p>",
					"otherinfo": "",
					"reference": "<p>https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching</p><p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control</p><p>https://grayduck.mn/2021/09/13/cache-control-recommendations/</p>",
					"cweid": "525",
					"wascid": "13",
					"sourceid": "1"
				}
			]
		}
	]
}
